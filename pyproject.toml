[project]
name = "jgutils"
version = "0.1.0"
description = "Generic utils to be shared between multiple projects"
authors = [
    { name = "Jayme Gordon", email = "jaymegordo@gmail.com" }
]
license = "MIT"
requires-python = ">=3.13,<4.0"
dependencies = [
    "numpy>=2.2.3",
    "pandas>=2.2.3",
    "cryptography>=38.0.1",
    "ruamel-yaml>=0.18.10",
    "tqdm>=4.67.1",
    "joblib>=1.5.1",
]

[dependency-groups]
dev = [
    "pytest>=6.2.4",
    "autopep8>=2.3.1",
    "ruff>=0.1.14",
    "pre-commit>=4.2.0",
]

[project.optional-dependencies]
colorlogging = [
    "colored-traceback==0.3.0",
    "colorlog>=6.6.0",
    "pygments",
]
terminaldf = [
    "tabulate>=0.8.9",
    # "lxml>=5.3.1",
]


[tool.uv]
default-groups = ["dev"]
required-version = ">=0.7.2,<0.8"

[tool.uv.sources]
pygments = { git = "https://github.com/jaymegordo/pygments.git" }

[tool.pyright]
reportWildcardImportFromLibrary = "none"
reportTypedDictNotRequiredAccess = "none"
reportUnboundVariable = "information"
reportMissingImports = "information"
reportGeneralTypeIssues = "information"
reportArgumentType = 'information'
reportAssignmentType = 'information'
reportAttributeAccessIssue = 'information'
reportReturnType = 'information'
reportCallIssue = 'information'
reportOperatorIssue = 'information'
reportRedeclaration = 'information'
reportOptionalIterable = "none"
reportOptionalMemberAccess = "information"
reportOptionalSubscript = "information"
reportPrivateImportUsage = "information"
reportUnusedExpression = "information"
reportInvalidStringEscapeSequence = "information"
reportSelfClsParameterName = "error"
reportInvalidTypeForm = "information"
reportMissingParameterType = "none"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "none"
reportUnusedParameter = "none"
reportUnsafeMultipleInheritance = "none"
reportUnannotatedClassAttribute = "none"
reportMissingTypeStubs = "none"
reportUnknownVariableType = "none"
reportAny = "none"
reportImplicitOverride = "information"
reportUnusedCallResult = "none"
reportMissingTypeArgument = "none"
reportUnknownLambdaType = "none"
reportIncompatibleVariableOverride = "none"
reportIncompatibleMethodOverride = "none"
reportTypeCommentUsage = "none"
reportExplicitAny = "none"
reportUntypedBaseClass = "none"
reportUnusedVariable = "information"
reportUninitializedInstanceVariable = "none"
reportDuplicateImport = "none"
reportUnreachable = "none"
reportImportCycles = "information"
reportMissingSuperCall = "none"
reportPossiblyUnboundVariable = "warning"
reportUntypedFunctionDecorator = "none"
reportConstantRedefinition = "none"
reportPrivateUsage = "none"
reportUnusedImport = "none"
reportInconsistentConstructor = "none"
reportShadowedImports = "none"

[tool.ruff]
cache-dir = "~/.cache/ruff"
line-length = 120
exclude = ["notebooks/*"]
target-version = "py313"

[tool.ruff.format]
quote-style = "single"
exclude = ["**/migrations/*"]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "B",
    "D",
    "N",
    "UP",
    "T20",
    "PTH",
    "PD",
    "PGH",
    "TCH",
    "ANN",
    "RET",
    "SIM",
    "Q",
    "C4",
    "TRY",
    "DJ",
]
ignore = [
    "E712",
    "E713",
    "E714",
    "E722",
    "E731",
    "F405",
    "F841",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D200",
    "D202",
    "D204",
    "D205",
    "D301",
    "D400",
    "D401",
    "D415",
    "ANN101",
    "ANN102",
    "ANN002",
    "ANN003",
    "RET503",
    "RET505",
    "PD901",
    "PD003",
    "PD004",
    "PLR5501",
    "PLR2004",
    "PGH003",
    "N817",
    "SIM201",
    "SIM108",
    "SIM118",
    "Q003",
    "C408",
    "TRY003",
    "TRY201",
    "TRY300",
    "TRY400",
    "DJ001",
    "UP039",
    "TCH003",  # standard library
]

[tool.ruff.lint.flake8-type-checking]
quote-annotations = true

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.pylint]
max-args = 6

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
force-single-line = true
